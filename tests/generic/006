# SPDX-License-Identifier: MIT or GPL-2.0-only
#!/bin/bash

. common/fio_common

echo -e "\trun fio with dev recovery, type 2:"
echo -e "\t(1)kill all ubq_deamon, (2)recover with new ubq_daemon, (3)kill all ubq_deamon, (4)delete dev"

DEV=/dev/ublkb0
BS=4k
RW=rw
JOBS=4
QUEUES=2
RT=$TRUNTIME*2
LOOPS=4
URING_COMP=1
NEED_GET_DATA=1
RECOVERY=1
RECOVERY_REISSUE=0

ublk_run_recover_kill_test()
{
	for CNT in `seq $LOOPS`; do
		__create_ublk_dev "null" $QUEUES $URING_COMP $NEED_GET_DATA $RECOVERY $RECOVERY_REISSUE
		echo -e "\trun fio with killing ublk(uring_comp $URING_COMP, get_data $NEED_GET_DATA, recovery $RECOVERY, recovery_reissue $RECOVERY_REISSUE) queue daemon $CNT"
		__run_fio_libaio "/dev/ublkb0" $BS $RW $JOBS $RT > /dev/null 2 >& 1 &
		sleep 2
		pid1=`__ublk_get_pid`
		kill -9 $pid1
		sleep 2
		secs=0
		while [ $secs -lt 10 ]; do
			state=`__ublk_get_dev_state 0`
			[ "$state" == "QUIESCED" ] && break
			sleep 1
			let secs++
		done
		secs=0
		while [ $secs -lt 10 ]; do
			RES=`__recover_ublk_dev 0`
			[ $RES -eq 0 ] && break
			sleep 1
			let secs++
		done
		if [ $RES -ne 0 ]; then
				echo -e "\trecover ublk0 failed"
				exit -1
		fi
		sleep 2
        pid2=`__ublk_get_pid`
		kill -9 $pid2
		sleep 2
		RES=`__remove_ublk_dev_return 0`
		if [ $RES -ne 0 ]; then
				echo -e "\tdelete ublk0 failed"
				exit -1
		fi
		wait
		sleep 3
	done
}

for RECOVERY_REISSUE in `seq 0 1`; do
		ublk_run_recover_kill_test
done
